/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion_equipo1.RevisionCV;

import entidades.Reclutador;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetosnegocio.ReclutadorDAO;

/**
 *
 * @author paula
 */
public class CrudRH extends javax.swing.JFrame {

    /**
     * Creates new form CrudRH
     */
    public CrudRH() {
        initComponents();
        cargarReclutadoresEnTabla();
    }

    public void cargarReclutadoresEnTabla() {
        // Columnas que se mostrar√°n
        String[] columnas = {"ID", "Usuario", "Nombre", "Apellido Paterno", "Apellido Materno", "Puesto", "Estado"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0); // 0 filas iniciales

        ReclutadorDAO controlador = ReclutadorDAO.getInstance();
        List<Reclutador> lista = controlador.obtenerTodos();

        for (Reclutador r : lista) {
            Object[] fila = new Object[]{
                r.getId(),
                r.getUsuario(),
                r.getNombreCompleto(),
                r.getApellidoPaterno(),
                r.getApellidoMaterno(),
                r.getPuesto(),
                r.isEstado() ? "Activo" : "Inactivo"
            };
            modelo.addRow(fila);
        }
        jTablaReclutadores.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelFotoRH = new javax.swing.JLabel();
        jLabel1CRUDRH = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaReclutadores = new javax.swing.JTable();
        jButtonActualizarRecluta = new javax.swing.JButton();
        jButtonAgregarRecluta = new javax.swing.JButton();
        jButtonEliminarRecluta = new javax.swing.JButton();
        jButtonCerrarVentana = new javax.swing.JButton();

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/rhfoto2.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelFotoRH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/rhfoto2.png"))); // NOI18N
        jLabelFotoRH.setText("jLabel2");

        jLabel1CRUDRH.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1CRUDRH.setText("Administrador de reclutas");

        jTablaReclutadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Usuario", "Nombre ", "Apellido Paterno", "Apellido Materno", "Puesto", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablaReclutadores);
        if (jTablaReclutadores.getColumnModel().getColumnCount() > 0) {
            jTablaReclutadores.getColumnModel().getColumn(0).setResizable(false);
        }

        jButtonActualizarRecluta.setText("Actualizar");
        jButtonActualizarRecluta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarReclutaActionPerformed(evt);
            }
        });

        jButtonAgregarRecluta.setText("Agregar");
        jButtonAgregarRecluta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarReclutaActionPerformed(evt);
            }
        });

        jButtonEliminarRecluta.setText("Eliminar");
        jButtonEliminarRecluta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarReclutaActionPerformed(evt);
            }
        });

        jButtonCerrarVentana.setBackground(new java.awt.Color(236, 51, 51));
        jButtonCerrarVentana.setText("Cerrar");
        jButtonCerrarVentana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarVentanaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabelFotoRH, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jLabel1CRUDRH, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jButtonActualizarRecluta)
                        .addGap(115, 115, 115)
                        .addComponent(jButtonAgregarRecluta)
                        .addGap(143, 143, 143)
                        .addComponent(jButtonEliminarRecluta)
                        .addGap(121, 121, 121)
                        .addComponent(jButtonCerrarVentana)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabelFotoRH, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1CRUDRH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonActualizarRecluta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgregarRecluta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminarRecluta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCerrarVentana, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgregarReclutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarReclutaActionPerformed
        // TODO add your handling code here:
        RegistroRH agregar = new RegistroRH();
        agregar.setVisible(true);
        agregar.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                cargarReclutadoresEnTabla(); // M√©todo que recarga la JTable
            }
        });

    }//GEN-LAST:event_jButtonAgregarReclutaActionPerformed

    private void jButtonCerrarVentanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarVentanaActionPerformed
        // TODO add your handling code here:
        MenuReclutador Menu = new MenuReclutador();
        Menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarVentanaActionPerformed

    private void jButtonActualizarReclutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarReclutaActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTablaReclutadores.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirmacion = JOptionPane.showConfirmDialog(
                    null, //centra en pantalla
                    "¬øSeguro que quieres actualizar a este reclutador?", //el mensaje que se muestra
                    "confirmar de actualizar", //titulo
                    JOptionPane.YES_NO_OPTION, //tipo de ventana
                    JOptionPane.WARNING_MESSAGE // icono
            );
            if (confirmacion == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(jTablaReclutadores.getValueAt(filaSeleccionada, 0).toString());
                String usuario = jTablaReclutadores.getValueAt(filaSeleccionada, 1).toString();
                String nombreCompleto = jTablaReclutadores.getValueAt(filaSeleccionada, 2).toString();
                String apellidoPaterno = jTablaReclutadores.getValueAt(filaSeleccionada, 3).toString();
                String apellidoMaterno = jTablaReclutadores.getValueAt(filaSeleccionada, 4).toString();
                String puesto = jTablaReclutadores.getValueAt(filaSeleccionada, 5).toString();
                boolean estado = Boolean.parseBoolean(jTablaReclutadores.getValueAt(filaSeleccionada, 6).toString());

                Reclutador r = new Reclutador(id, nombreCompleto, apellidoPaterno, apellidoMaterno, puesto, usuario, estado);
                boolean actualizar = true;
                RegistroRH agregar = new RegistroRH(r, actualizar);
                agregar.setVisible(true);
                agregar.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosed(java.awt.event.WindowEvent e) {
                        cargarReclutadoresEnTabla(); // M√©todo que recarga la JTable
                    }
                });

//                reclutadorON.getInstance().actualizarReclutador(r);
//                cargarReclutadoresEnTabla();
//                JOptionPane.showMessageDialog(null, "Reclutador actualizado con exito.",
//                        "actualizaci√≥n exitosa", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operaci√≥n cancelada",
                        "operacion cancelada", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un reclutador de la tabla a actualizar.",
                              "Seleccion requerida", JOptionPane.WARNING_MESSAGE);

        }


    }//GEN-LAST:event_jButtonActualizarReclutaActionPerformed

    private void jButtonEliminarReclutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarReclutaActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTablaReclutadores.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirmacion = JOptionPane.showConfirmDialog(
                    null, //centra en pantalla
                    "¬øSeguro que quieres eliminar a este reclutador?", //el mensaje que se muestra
                    "confirmar eliminaci√≥n", //titulo
                    JOptionPane.YES_NO_OPTION, //tipo de ventana
                    JOptionPane.WARNING_MESSAGE // icono
            );
            if (confirmacion == JOptionPane.YES_OPTION) {
                Object id = jTablaReclutadores.getValueAt(filaSeleccionada, 0);
                ReclutadorDAO.getInstance().eliminarReclutador((int) id);
                cargarReclutadoresEnTabla();
                JOptionPane.showMessageDialog(null, "Reclutador eliminado con exito.",
                        "eliminaci√≥n exitosa", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operaci√≥n cancelada",
                        "operacion cancelada", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un reclutador de la tabla a eliminar.",
                              "Seleccion requerida", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_jButtonEliminarReclutaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudRH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudRH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudRH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudRH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrudRH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizarRecluta;
    private javax.swing.JButton jButtonAgregarRecluta;
    private javax.swing.JButton jButtonCerrarVentana;
    private javax.swing.JButton jButtonEliminarRecluta;
    private javax.swing.JLabel jLabel1CRUDRH;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelFotoRH;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaReclutadores;
    // End of variables declaration//GEN-END:variables
}
