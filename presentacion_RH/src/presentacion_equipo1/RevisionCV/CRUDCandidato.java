/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion_equipo1.RevisionCV;

import dto.CandidatoDTO;
import objetosnegocio.CandidatoON;
import entidades.Candidato;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetosnegocio.CandidatoON;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Adrián
 */
public class CRUDCandidato extends javax.swing.JFrame {
    private List<CandidatoDTO> candidatosMostrados;

    /**
     * Creates new form CRUDCandidato
     */
    boolean estado = false;
    List<CandidatoDTO> listaCandidatos = new ArrayList<>();
    CandidatoON candidatoON;
    public CRUDCandidato() {
        initComponents();
        cargarCandidatosEnTabla();
    }
    
    
        public void cargarCandidatosEnTabla() {
        // Columnas que se mostrarán
        DefaultTableModel modelo = new DefaultTableModel(new String[]{"ID","Nombre", "Apellido Paterno","Apellido Materno", "Teléfono", "Email", "Puesto", "Estado", "Archivo CV"}, 0);
        
        CandidatoON controlador= CandidatoON.getInstance();
        List<Candidato> lista = controlador.obtenerTodos();

        for (Candidato c : lista) {
            Object[] fila = new Object[]{
                c.getId(),
                c.getNombre(),
                c.getApellidoPaterno(),
                c.getApellidoMaterno(),
                c.getPuesto(),
                c.isEstado() ? "Activo" : "Inactivo",
                c.getRutaPDF()
            };
            modelo.addRow(fila);
        }
        tablaCandidato.setModel(modelo);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        volverButton = new javax.swing.JButton();
        EliminarBoton = new javax.swing.JButton();
        actualizarBoton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        apellidoP = new javax.swing.JTextField();
        apellidoM = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        actividad = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        telefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        correo = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCandidato = new javax.swing.JTable();
        Consultar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        puesto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        idCampo = new javax.swing.JTextField();

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Muestra de Candidatos");

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Muestra de Candidatos");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addContainerGap(186, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(186, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(187, 187, 187));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Tabla de Candidatos");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(439, 439, 439))
        );

        volverButton.setText("Volver");
        volverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonActionPerformed(evt);
            }
        });

        EliminarBoton.setBackground(new java.awt.Color(0, 0, 51));
        EliminarBoton.setForeground(new java.awt.Color(255, 255, 255));
        EliminarBoton.setText("Eliminar");
        EliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarBotonActionPerformed(evt);
            }
        });

        actualizarBoton.setBackground(new java.awt.Color(0, 0, 51));
        actualizarBoton.setForeground(new java.awt.Color(255, 255, 255));
        actualizarBoton.setText("Actualizar");
        actualizarBoton.setMaximumSize(new java.awt.Dimension(72, 23));
        actualizarBoton.setMinimumSize(new java.awt.Dimension(72, 23));
        actualizarBoton.setPreferredSize(new java.awt.Dimension(72, 23));
        actualizarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBotonActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre");

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        jLabel5.setText("Apellido Paterno");

        jLabel6.setText("Apellido Materno");

        jLabel7.setText("Estado del candidato");

        actividad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        actividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actividadActionPerformed(evt);
            }
        });

        jLabel8.setText("Teléfono");

        telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefonoActionPerformed(evt);
            }
        });

        jLabel9.setText("Correo electrónico");

        guardar.setBackground(new java.awt.Color(0, 0, 51));
        guardar.setForeground(new java.awt.Color(255, 255, 255));
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        tablaCandidato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellido Paterno", "Apellido Materno", "Telefono", "Email", "Puesto", "Estado", "PDF"
            }
        ));
        jScrollPane1.setViewportView(tablaCandidato);

        Consultar.setBackground(new java.awt.Color(0, 0, 51));
        Consultar.setForeground(new java.awt.Color(255, 255, 255));
        Consultar.setText("Consultar");

        jLabel10.setText("Puesto");

        puesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puestoActionPerformed(evt);
            }
        });

        jLabel11.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(apellidoM, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(nombre)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(apellidoP)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(telefono, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(correo)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puesto)
                    .addComponent(actividad, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(volverButton)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idCampo))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(actualizarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 423, Short.MAX_VALUE)
                        .addComponent(Consultar)
                        .addGap(88, 88, 88)
                        .addComponent(EliminarBoton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(9, 9, 9)
                        .addComponent(apellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(apellidoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addGap(8, 8, 8)
                        .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addGap(8, 8, 8)
                        .addComponent(puesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(volverButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EliminarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actualizarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverButtonActionPerformed
        MenuReclutador Menu = new MenuReclutador();
        Menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverButtonActionPerformed

    private void actualizarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBotonActionPerformed
        int filaSeleccionada = tablaCandidato.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirmacion = JOptionPane.showConfirmDialog(
                    null, //centra en pantalla
                    "¿Seguro que quieres actualizar a este reclutador?", //el mensaje que se muestra
                    "confirmar de actualizar", //titulo
                    JOptionPane.YES_NO_OPTION, //tipo de ventana
                    JOptionPane.WARNING_MESSAGE // icono
            );
            if (confirmacion == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(tablaCandidato.getValueAt(filaSeleccionada, 0).toString());
                String nombre = tablaCandidato.getValueAt(filaSeleccionada, 1).toString();
                String apellidoPaterno = tablaCandidato.getValueAt(filaSeleccionada, 2).toString();
                String apellidoMaterno = tablaCandidato.getValueAt(filaSeleccionada, 3).toString();
                String telefono = tablaCandidato.getValueAt(filaSeleccionada, 4).toString();
                String correo = tablaCandidato.getValueAt(filaSeleccionada, 5).toString();
                String puesto = tablaCandidato.getValueAt(filaSeleccionada, 6).toString();
                boolean estado = Boolean.parseBoolean(tablaCandidato.getValueAt(filaSeleccionada, 6).toString());
                String Rutapdf = tablaCandidato.getValueAt(filaSeleccionada, 7).toString();

                Candidato c = new Candidato(id, nombre, apellidoPaterno, apellidoMaterno, telefono, correo, correo, estado, Rutapdf);
                CandidatoDTO ca = new CandidatoDTO(nombre, apellidoPaterno, apellidoMaterno, telefono, correo, correo, estado, Rutapdf);

                boolean actualizar = true;                
                try {
                    candidatoON.getInstance().actualizarCandidato(c);
                } catch (SQLException ex) {
                    Logger.getLogger(CRUDCandidato.class.getName()).log(Level.SEVERE, null, ex);
                }
                cargarCandidatosEnTabla();
                actualizarTabla(candidatoON.getInstance().obtenerCandidatos());
                JOptionPane.showMessageDialog(null, "Candidato actualizado con exito.",
                        "actualización exitosa", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operación cancelada",
                        "operacion cancelada", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            System.out.println("error");
            JOptionPane.showMessageDialog(null, "Selecciona un Candidato  para eliminar correctamente.",
                    "Error de eliminar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_actualizarBotonActionPerformed

    private void EliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarBotonActionPerformed
         if (nombre.getText().trim().isEmpty() || apellidoP.getText().trim().isEmpty()|| apellidoM.getText().trim().isEmpty()
            || telefono.getText().trim().isEmpty() || correo.getText().trim().isEmpty() || puesto.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios",
                "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
         }
        int filaSeleccionada = tablaCandidato.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirmacion = JOptionPane.showConfirmDialog(
                    null, //centra en pantalla
                    "¿Seguro que quieres eliminar a este candidato?", //el mensaje que se muestra
                    "confirmar eliminación", //titulo
                    JOptionPane.YES_NO_OPTION, //tipo de ventana
                    JOptionPane.WARNING_MESSAGE // icono
            );
            if (confirmacion == JOptionPane.YES_OPTION) {
                Object id = tablaCandidato.getValueAt(filaSeleccionada, 0);
                candidatoON.getInstance().eliminarCandidato((int) id);
                cargarCandidatosEnTabla();
                JOptionPane.showMessageDialog(null, "Candidato eliminado con exito.",
                        "la eliminación fue exitosa", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operación cancelada",
                        "operacion cancelada", JOptionPane.INFORMATION_MESSAGE);
            }

         }

          
        
    }//GEN-LAST:event_EliminarBotonActionPerformed

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        if (nombre.getText().trim().isEmpty() || apellidoP.getText().trim().isEmpty()|| apellidoM.getText().trim().isEmpty()
            || telefono.getText().trim().isEmpty() || correo.getText().trim().isEmpty() || puesto.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios",
                "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        //}
        }else{
            //Se extraen los strings de los text field
            String nom = nombre.getText().trim();
            String tel = telefono.getText().trim();
            String cor = correo.getText().trim();
            String pue = puesto.getText().trim();
            
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos PDF", "pdf"));

            int resultado = fileChooser.showOpenDialog(this);
            if (resultado == JFileChooser.APPROVE_OPTION) {
                File archivoSeleccionado = fileChooser.getSelectedFile();
                String nombreArchivo = archivoSeleccionado.getName();

                // Ruta base dinámica
                String rutaBase = System.getProperty("user.dir");
                File carpetaCVs = new File(rutaBase, "../objetos_negocios/src/CVs");
                if (!carpetaCVs.exists()) {
                    carpetaCVs.mkdirs();
                }

                // Guardar el archivo con la ruta relativa en el DTO
                    File destino = new File(carpetaCVs, nombreArchivo);
                        try {
                    Files.copy(archivoSeleccionado.toPath(), destino.toPath(), StandardCopyOption.REPLACE_EXISTING);

                // Guardar solo la ruta relativa al archivo en el DTO
                    String rutaRelativa = "CVs/" + nombreArchivo;  // Guardamos solo la ruta relativa

                    CandidatoDTO candidato = new CandidatoDTO(
                        nom,
                        apellidoP.getText(),
                        apellidoM.getText(),
                        tel,
                        cor,
                        pue,
                        estado,
                        rutaRelativa // Usamos la ruta relativa aquí
                            
                );
                    
                    Candidato cand = new Candidato(
                        0,
                        nom,
                        apellidoP.getText(),
                        apellidoM.getText(),
                        tel,
                        cor,
                        pue,
                        estado,
                        rutaRelativa
                    );

                candidatoON.getInstance().agregarCandidato(cand);
                actualizarTabla(candidatoON.getInstance().obtenerCandidatos());
                cargarCandidatosEnTabla();
            } catch (IOException e) {
              JOptionPane.showMessageDialog(this, "Error al copiar archivo: " + e.getMessage());
                } catch (SQLException ex) {
                    Logger.getLogger(CRUDCandidato.class.getName()).log(Level.SEVERE, null, ex);
                }
          }
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefonoActionPerformed

    private void puestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_puestoActionPerformed

    private void actividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actividadActionPerformed
        //Se compara la seleccion del combo box   
        if(evt.getSource() == actividad){
                //se equivale la seleccion al estado seleccionado
               String seleccion = (String)actividad.getSelectedItem();
               //Si Seleccion es igual a "Activo", el estado se vuelve activo
               if(seleccion.equals("Activo")){
                   estado = true;
               }
           }
    }//GEN-LAST:event_actividadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUDCandidato().setVisible(true);
            }
        });
    }
        private void actualizarTabla(List<CandidatoDTO> lista) {
        DefaultTableModel model = (DefaultTableModel) tablaCandidato.getModel();
        model.setRowCount(0); // limpiar tabla

        //se almacena la nueva lista de candidatos mostrados
        this.candidatosMostrados = new ArrayList<>(lista);

        for (CandidatoDTO c : lista) {
            model.addRow(new Object[]{
                c.getNombre(),
                c.getApellidoPaterno(),
                c.getApellidoMaterno(),
                c.getTelefono(),
                c.getCorreo(),
                c.getPuesto(),
                c.isEstado() ? "Activo" : "Inactivo",
                c.getRutaPDF()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Consultar;
    private javax.swing.JButton EliminarBoton;
    private javax.swing.JComboBox<String> actividad;
    private javax.swing.JButton actualizarBoton;
    private javax.swing.JTextField apellidoM;
    private javax.swing.JTextField apellidoP;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField correo;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField idCampo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField puesto;
    private javax.swing.JTable tablaCandidato;
    private javax.swing.JTextField telefono;
    private javax.swing.JButton volverButton;
    // End of variables declaration//GEN-END:variables
}
